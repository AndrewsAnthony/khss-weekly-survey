extends layout

block style
  include ./style/user
block scripts
  include ./script/user

include ./mixins/header

include ./mixins/inbox
include ./mixins/task
include ./mixins/history
include ./mixins/displayfile

include ./mixins/createnote

block content
  - function createNameHouse(house) { console.log(house);return house.street_new_rus ? house.street_new_rus + " " +  house.name_new_rus + ", " + house.building + " (стр.наз. " + house.street_rus + " " +  house.name_rus + ")" :  house.street_rus + " " + house.name_rus + ", " + house.building }

  #loading_layer
    .loader

  +header(user, true, true, true)

  .container(role="main")
    .row
      .col-sm-12.well
        if (R.any(R.whereEq({name: 'showProfile'}), user.Rules))
          .well.well-sm
            .row
              .col-sm-6.col-md-3.text-center
                img(src= user.image max-width='300px').img-responsive.img-thumbnail
              .col-sm-6.col-md-9.text-center
                h4 #{user.name}
                small
                  cite #{user.Depatment.name}
                ul.list-group
                  li.list-group-item
                    i.fa.fa-envelope-o
                    | #{" " + user.email}
                  li.list-group-item
                    i.fa.fa-phone
                    | #{" " + user.phone}
          
          .well.well-sm
            h3.text-center.bg-danger
              i Входящие на отдел

            - var prepareHouseForInbox = R.compose(R.map(R.head()), R.reduceBy((acc, inbox) => acc.concat(createNameHouse(inbox.House)), [])(inbox => inbox.House.id))(user.Depatment.Inboxes);
            - var groupInboxes = R.groupBy(inbox => inbox.House.id, user.Depatment.Inboxes)
        
            .just-padding
              .list-group.list-group-root.well
                each house, key in prepareHouseForInbox
                  a(href="#house-" + key class="list-group-item" data-toggle="collapse")
                    i.glyphicon.glyphicon-chevron-right
                    | #{house}
                    span.badge #{groupInboxes[key].length}
                  .list-group.collapse(id="house-" + key)
                    each inbox, ind in groupInboxes[key]
                      a(href="#inbox-" + (key + '-' + ind) class="list-group-item" data-toggle="collapse")
                        i.glyphicon.glyphicon-chevron-right
                        span
                          | #{' '}
                          | Входящие #{"# " + inbox.number} от #{moment(inbox.inboxdate).format('DD-MM-YYYY')}
                         br
                        span.label.label-primary #{moment(inbox.term).fromNow()}
                      .list-group.collapse(id="inbox-" + (key + '-' + ind))
                        .list-group-item
                          dl.dl-horizontal
                            dt Ссылка для перехода
                            dd
                              a(href='/house/' + key) Перейти к адресу
                            if (inbox.binding)
                              dt Привязка
                              dd #{inbox.binding}
                            if (inbox.Problems.length)
                              dt Проблемы
                              dd
                                each problem, ins in inbox.Problems
                                  i #{problem.name}
                                  if (ins !== (inbox.Problems.length - 1))
                                    | #{', '}
                          hr
                          +uploadfilesbutton(inbox.Files, '')

          - var prepareHouseForTask = R.map(R.compose(R.map(R.head()), R.reduceBy((acc, task) => acc.concat(createNameHouse(task.House)), [])(task => task.House.id)))(R.pluck('ItemTasks', userTasks));
          - var groupItemTasks = R.map(R.groupBy(task => task.House.id))(R.pluck('ItemTasks', userTasks));
          //- | #{JSON.stringify(prepareHouseForTask)}
          //- | #{JSON.stringify(groupItemTasks)}

          .well.well-sm
            if (!userTasks)
              h3.text-center.bg-danger
                i Активные задачи
              each itemtask in user.ItemTasks
                +history(itemtask, '') 

            if (userTasks)
              ul.nav.nav-tabs
                li.dropdown
                  a.dropdown-toggle(data-toggle="dropdown" href="#")
                    | #{'Выбрать сотрудника '}
                    span.caret
                  ul.dropdown-menu
                    each user in userTasks
                      li
                        a(href="#user" + user.id data-toggle="tab")
                          if (user.id == user.ChiefId)
                            | #{'Твои '} 
                          else
                            | #{user.name + " "}
                          span.label.label-primary #{user.ItemTasks.length + ' задач'}
            
              h3.text-center.bg-danger
                i Активные задачи отдела

              .tab-content
                each user, count in userTasks
                  .tab-pane(id="user" + user.id)
                    if (user.id !== user.ChiefId)
                      .media.well.well-sm
                        .media-left.media-top
                          a(href="#")
                            img.media-object(src= user.image width='64px')
                        .media-body
                          h4.media-heading
                            b #{user.name}
                          ul.list-unstyled
                            li 
                              u Контактные данные
                            li #{user.email}
                            li #{user.phone}
                    .just-padding
                      .list-group.list-group-root.well
                        each house, key in prepareHouseForTask[count]
                          a(href="#house-task-" + key class="list-group-item" data-toggle="collapse")
                            i.glyphicon.glyphicon-chevron-right
                            | #{house}
                            span.badge #{groupItemTasks[count][key].length}
                          .list-group.collapse(id="house-task-" + key)
                            each itemtask, ind in groupItemTasks[count][key]
                              .list-group-item
                                +history(itemtask, '')

                    //- each itemtask in user.ItemTasks
                    //-   +history(itemtask, '')