extends layout

block style
  include ./style/user
block scripts
  include ./script/user

include ./mixins/header
include ./mixins/tooltipborder

include ./mixins/inbox
include ./mixins/task
include ./mixins/history
include ./mixins/displayfile
include ./mixins/changeprofile

include ./mixins/createnote

block content

  #loading_layer
    .loader

  +header(user, true, true, true)

  .container(role="main")
    .row
      .col-sm-12.well
        if (viewHelper.checkUserRule('showProfile', user.Rules))
          .well.well-sm
            .row
              .col-sm-6.col-md-3.text-center
                img(src= ((user.image) ? ('/userprofile/' + user.image) : '/images/user.png')).img-responsive.img-thumbnail
              .col-sm-6.col-md-9.text-center
                h4 #{user.name}
                small
                  cite #{user.Depatment.name}
                ul.list-group
                  li.list-group-item
                    i.fa.fa-envelope-o
                    | #{" " + user.email}
                  li.list-group-item
                    i.fa.fa-phone
                    | #{" " + user.phone}

                button(type="button" class="btn btn-success btn-block" data-toggle="modal" data-target="#changeProfileModal") Изменить профайл

          .well.well-sm
            h3.text-center.bg-danger
              i Входящие на отдел

            - var prepareHouseForInbox = R.compose(R.map(R.head()), R.reduceBy((acc, inbox) => acc.concat(viewHelper.createNameHouse(inbox.House)), [])(inbox => inbox.House.id))(user.Depatment.Inboxes);
            - var groupInboxes = R.groupBy(inbox => inbox.House.id, user.Depatment.Inboxes)

            .just-padding
              .list-group.list-group-root.well
                each house, key in prepareHouseForInbox
                  a(href="#house-" + key class="list-group-item" data-toggle="collapse")
                    i.glyphicon.glyphicon-chevron-right
                    | #{house}
                    span.badge #{groupInboxes[key].length}
                  .list-group.collapse(id="house-" + key)
                    each inbox, ind in groupInboxes[key]
                      +tooltipborder("Статус - " + viewHelper.tooltipTitle(inbox.status))
                      a(href="#inbox-" + (key + '-' + ind) class="list-group-item" data-toggle="collapse" id= viewHelper.addBorderStyle(inbox.status))
                        i.glyphicon.glyphicon-chevron-right
                        span
                          | #{' '}
                          | Входящие #{"# " + inbox.number} от #{moment(inbox.inboxdate).format('DD-MM-YYYY')}
                         br
                        span.label.label-primary #{moment(inbox.term).fromNow()}
                      .list-group.collapse(id="inbox-" + (key + '-' + ind))
                        .list-group-item
                          dl.dl-horizontal
                            dt Ссылка для перехода
                            dd
                              a(href='/house/' + key) Перейти к адресу
                            if (inbox.binding)
                              dt Привязка
                              dd #{inbox.binding}
                            if (inbox.Problems.length)
                              dt Проблемы
                              dd
                                each problem, ins in inbox.Problems
                                  i #{problem.name}
                                  if (ins !== (inbox.Problems.length - 1))
                                    | #{', '}
                          hr
                          +uploadfilesbutton(inbox.Files, '')

          - var prepareHouseForTask = R.map(R.compose(R.map(R.head()), R.reduceBy((acc, task) => acc.concat(viewHelper.createNameHouse(task.House)), [])(task => task.House.id)))(R.pluck('ItemTasks', userTasks ? userTasks : [user]));

          - var groupItemTasks = R.map(R.groupBy(task => task.House.id))(R.pluck('ItemTasks', userTasks ? userTasks : [user]));

          if (userTasks)

            - var intersectionHouse = R.range(0, userTasks.length).reduce((useracc, user, ind) => { useracc[user] = groupItemTasks.reduce((acc, listaddress, listind) => { if (listind !== ind){ intersectionAddress = R.intersection(R.keys(prepareHouseForTask[user]), R.keys(listaddress)); if (intersectionAddress.length) { intersectionAddress.forEach(address => { if (!acc[address]) { acc[address] = [listind] } else { acc[address].push(listind) } }) }; return acc } return acc }, {}); return useracc }, {})

          .well.well-sm
            if (!userTasks)
              h3.text-center.bg-danger
                i Активные задачи
              .just-padding
                .list-group.list-group-root.well
                  each house, key in prepareHouseForTask[0]
                    a(href="#house-task-" + key class="list-group-item" data-toggle="collapse")
                      i.glyphicon.glyphicon-chevron-right
                      | #{house}
                      span.badge #{groupItemTasks[0][key].length}
                    .list-group.collapse(id="house-task-" + key)
                      each itemtask, ind in groupItemTasks[0][key]
                        .list-group-item
                          +history(itemtask, '')

            if (userTasks)
              ul.nav.nav-tabs.nav-justified
                li.dropdown.active
                  a.dropdown-toggle(data-toggle="dropdown" href="#")
                    | #{'Задачи '}
                    span.caret
                  ul.dropdown-menu
                    each user in userTasks
                      li
                        a(href="#user-task-" + user.id data-toggle="tab")
                          if (user.id == user.ChiefId)
                            | #{'Твои '}
                          else
                            | #{viewHelper.inicialName(user.name) + " "}
                          span.label.label-primary #{user.ItemTasks.length + ' задач'}
                li.dropdown
                  a.dropdown-toggle(data-toggle="dropdown" href="#")
                    | #{'Пересечение'}
                    span.caret
                  ul.dropdown-menu
                    each user, ind in userTasks
                      li
                        a(href="#user-intersaction-" + user.id data-toggle="tab")
                          if (user.id == user.ChiefId)
                            | #{'Твои '}
                          else
                            | #{viewHelper.inicialName(user.name) + " "}
                          span.label.label-primary #{R.keys(intersectionHouse[ind]).length + ' адрес' + ((R.keys(intersectionHouse[ind]).length == 1) ? "" : "а")}

              h3.text-center.bg-danger
                i Активные задачи отдела

              .tab-content
                each user, count in userTasks
                  .tab-pane(id="user-task-" + user.id)
                    if (user.id !== user.ChiefId)
                      .media.well.well-sm
                        .media-left.media-top
                          a(href="#")
                            img.media-object(src= ((user.image) ? ('/userprofile/thumbnails/' + user.image) : '/images/user.png'))
                        .media-body
                          h4.media-heading
                            b #{viewHelper.inicialName(user.name)}
                          ul.list-unstyled
                            li
                              u Контактные данные
                            li #{user.email}
                            li #{user.phone}
                    .just-padding
                      .list-group.list-group-root.well
                        each house, key in prepareHouseForTask[count]
                          a(href="#house-task-"+ count + '-' + key class="list-group-item" data-toggle="collapse")
                            i.glyphicon.glyphicon-chevron-right
                            | #{house}
                            span.badge #{groupItemTasks[count][key].length}
                          .list-group.collapse(id="house-task-"+ count + '-' + key)
                            each itemtask, ind in groupItemTasks[count][key]
                              .list-group-item
                                +history(itemtask, '')

                each user, count in userTasks
                  .tab-pane(id="user-intersaction-" + user.id)
                    if (user.id !== user.ChiefId)
                      .media.well.well-sm
                        .media-left.media-top
                          a(href="#")
                            img.media-object(src= ((user.image) ? ('/userprofile/thumbnails/' + user.image) : '/images/user.png'))
                        .media-body
                          h4.media-heading
                            b #{viewHelper.inicialName(user.name)}
                          ul.list-unstyled
                            li
                              u Контактные данные
                            li #{user.email}
                            li #{user.phone}
                    .just-padding
                      .list-group.list-group-root.well
                        each houseid in R.keys(intersectionHouse[count])
                          if (intersectionHouse[count][houseid].length)
                            a(href="#house-intersection-"+ count + '-' + '-' + houseid class="list-group-item" data-toggle="collapse")
                              i.glyphicon.glyphicon-chevron-right
                              span.badge #{"еще " + intersectionHouse[count][houseid].length + " сотрудник" + ((intersectionHouse[count][houseid].length == 1) ? "" : "а")}
                              | #{prepareHouseForTask[count][houseid]}
                            .list-group.collapse(id="house-intersection-" + count + '-' + '-' + houseid)
                              each userid in intersectionHouse[count][houseid]
                               .list-group-item
                                  b
                                    i
                                      u #{viewHelper.inicialName(userTasks[userid]['name'])}
                               each itemtask in groupItemTasks[userid][houseid]
                                  .list-group-item
                                    +history(itemtask, '')
                              .list-group-item
                                b
                                  i
                                    u #{viewHelper.inicialName(userTasks[count]['name'])}
                              each itemtask in groupItemTasks[count][houseid]
                                .list-group-item
                                  +history(itemtask, '')

          +changeprofile(user)