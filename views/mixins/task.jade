mixin tasklist(itemtasktype, house, rules)
  tr.img-thumbnail(
  id= viewHelper.addBorderStyle(itemtasktype.status)
  data-toggle="tooltip"
  data-placement="top"
  title= viewHelper.tooltipTitle(itemtasktype.status) )
    -var itemtaskobj = { letter: "Написать письмо", photoreport: "Фотоотчет", information: "Предоставить информацию"}
    td(data-title='Исполнитель').taskimplementer
      b #{  viewHelper.inicialName(itemtasktype.Implementer.name)}
      br
      mark #{itemtaskobj[itemtasktype.TaskType.name.split('-')[0]]}

    if (itemtasktype.TaskType.model == 'inbox')
      td(data-title='Вид задания').tasktype
        b #{itemtasktype.TaskType.description}
        br
        a(href='#inboxNumber' + itemtasktype.Inbox.id) #{itemtasktype.Inbox.number}

    else if (itemtasktype.TaskType.model == 'authority')
      td(data-title='Вид задания').tasktype
        b #{itemtasktype.TaskType.description}
        br
        i #{itemtasktype.Authority.name}
        br
        i #{moment(itemtasktype.Authority.date).format("DD-MM-YYYY")}
        br
        i #{itemtasktype.Authority.location}

    else if (itemtasktype.TaskType.model == 'information')
      td(data-title='Вид задания').tasktype
        b #{itemtasktype.TaskType.description}
        br
        i #{itemtasktype.Information.description}

    else if (itemtasktype.TaskType.model == 'schedule')
      td(data-title='Вид задания').tasktype
        b #{itemtasktype.TaskType.description}
        br
        i #{itemtasktype.Schedule.title} - #{itemtasktype.Schedule.type}

    else if (itemtasktype.TaskType.model == 'program')
      td(data-title='Вид задания').tasktype
        b #{itemtasktype.TaskType.description}
        br
        i #{itemtasktype.Program.title}

    else if (itemtasktype.TaskType.model == 'protocol')
      td(data-title='Вид задания').tasktype
        b #{itemtasktype.TaskType.description}
        br
        i #{itemtasktype.Protocol.title}
        br
        i #{moment(itemtasktype.Protocol.date).format("DD-MM-YYYY")}
        br
        i #{itemtasktype.Protocol.location}

    else if (itemtasktype.TaskType.model == 'problem')
      td(data-title='Вид задания').tasktype
        b #{itemtasktype.TaskType.description}
        br
        i #{itemtasktype.Repair.name}


    td(data-title='Привязка к местности').taskbinding
      | #{itemtasktype.binding || " "}

    td(data-title='Проблемы в задании').taskproblem
      if (itemtasktype.Problems.length)
        each problem in itemtasktype.Problems
          i #{"- " + problem.name}
          br
      else
        | #{' '}

    td(data-title='Срок исполнения').taskterm
      | #{moment(itemtasktype.term).calendar()}
      br
      if (moment.duration(moment(itemtasktype.term).diff(moment())).days() < 3)
        i.label.label-danger
          |#{moment(itemtasktype.term).fromNow()}
      else
        i.label.label-success
          |#{moment(itemtasktype.term).fromNow()}


    td(data-title=' ')
      .dropup
        button.btn.btn-primary.btn-xs.dropdown-toggle(type="button" data-toggle="dropdown")= 'Действие '
          span.caret
        ul.dropdown-menu
          if ( viewHelper.checkUserRule('changeTask', rules) )
            li.dropdown-header Администрирование
            li
              a(href='/house/task/' + itemtasktype.id + '/edit') Редактировать
          if (viewHelper.checkUserRule('addFile', user.Rules))
            li.dropdown-header Загрузить на сервер
            li
              a(
              href='#'
              data-toggle='modal'
              data-target='#createNoteTask'
              data-taskid= itemtasktype.id
              data-houseid= house.id) Заметка
            li
              a(
              href='#'
              data-toggle='modal'
              data-target='#createFile'
              data-object='task'
              data-file='document'
              data-objecthouse= house.id
              data-objectid= itemtasktype.id) Документ
            li
              a(
              href='#'
              data-toggle='modal'
              data-target='#createFile'
              data-object='task'
              data-file='photo'
              data-objecthouse= house.id
              data-objectid= itemtasktype.id) Фотографию