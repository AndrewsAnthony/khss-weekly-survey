include ./displayfile
include ./notetask
include ./tooltipborder
include ./tooltip-date

mixin history(itemtask, pathToFile)
  - var uniquekey = Math.random().toString().slice(2)

  - var itemTaskState = {active: { letter: "Написать письмо", photoreport: "Сделать фотоотчет", information: "Предоставить информацию"}, add: { letter: "Письмо добавлено", photoreport: "Фотоотчет загружен", information: "Информация добавлена"}, close: { letter: "Письмо закрыто", photoreport: "Фотоотчет", information: "Информация"}, deleted: { letter: "Письмо в статусе - удалено", photoreport: "Фотоотчет не актуален", information: "Информация не актуальна"}}

  .panel-group
    +tooltipborder("Статус - " + viewHelper.tooltipTitle(itemtask.status))
    div(class= "panel panel-default")
      .panel-heading(id= viewHelper.addBorderStyle(itemtask.status))
        h4.panel-title
          a.arrow-toggle.collapsed(
          data-toggle="collapse"
          href="#collapse-task-" + itemtask.id + '-' + uniquekey)

            span.small.pull-right
              i.fa.fa-calendar
              | #{" создан"}
              | #{" "}
              +tooltipdatenow(itemtask.createdAt)

            if (itemtask.TaskType.model == 'inbox')
              span.pull-left
                b #{itemTaskState[itemtask.status][itemtask.TaskType.name.split('-')[0]]}
                br
                i [ #{itemtask.TaskType.description} #{itemtask.Inbox.number} ]

            else if (itemtask.TaskType.model == 'authority')
              span.pull-left
                b #{itemTaskState[itemtask.status][itemtask.TaskType.name.split('-')[0]]}
                br
                i [ #{itemtask.TaskType.description} #{itemtask.Authority.name}
                | #{" "}
                +tooltipdatenow(itemtask.Authority.date)
                | #{" " + itemtask.Authority.location} ]

            else if (itemtask.TaskType.model == 'program')
              span.pull-left
                b #{itemTaskState[itemtask.status][itemtask.TaskType.name.split('-')[0]]}
                br
                i [ #{itemtask.TaskType.description} #{itemtask.Program.title} ]

            else if (itemtask.TaskType.model == 'schedule')
              span.pull-left
                b #{itemTaskState[itemtask.status][itemtask.TaskType.name.split('-')[0]]}
                br
                i [ #{itemtask.TaskType.description} #{itemtask.Schedule.title} #{itemtask.Schedule.year || moment(itemtask.Schedule.date).format("YYYY")} ]

            else if (itemtask.TaskType.model == 'protocol')
              span.pull-left
                b #{itemTaskState[itemtask.status][itemtask.TaskType.name.split('-')[0]]}
                br
                i [ #{itemtask.Protocol.title}
                | #{" "}
                +tooltipdatenow(itemtask.Protocol.date)
                | #{" " + itemtask.Protocol.location} ]

            else if (itemtask.TaskType.model == 'problem')
              span.pull-left
                b #{itemTaskState[itemtask.status][itemtask.TaskType.name.split('-')[0]]}
                br
                i [ Выполнение ремонтных работ - #{itemtask.Repair.name} ]

            else if (itemtask.TaskType.model == 'information')
              span.pull-left
                b #{itemTaskState[itemtask.status][itemtask.TaskType.name.split('-')[0]]}
                br
                i [ #{itemtask.Information.description} ]

            .clearfix

      .panel-collapse.collapse(id="collapse-task-" + itemtask.id + '-' + uniquekey)
        .panel-body
          dl.dl-horizontal
            dt Исполнитель
            dd #{viewHelper.inicialName(itemtask.Implementer.name)}

            if (itemtask.binding)
              dt Привязка
              dd #{itemtask.binding}

            if (itemtask.Problems.length)
              dt Проблемы
              dd
                each problem, ind in itemtask.Problems
                  i #{problem.name}
                  if (ind !== (itemtask.Problems.length - 1))
                    | #{', '}

        .panel-footer
          if (itemtask.NoteTasks.length)
            +createnotetask(itemtask)

          if (itemtask.Files.length)
            +uploadfilesbutton(itemtask.Files, pathToFile)